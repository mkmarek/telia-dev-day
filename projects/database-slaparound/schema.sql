CREATE TABLE CATEGORY(
   ID            INT GENERATED ALWAYS AS IDENTITY,
   NAME          TEXT NOT NULL,
   DESCRIPTION   TEXT,
   PARENT_ID     INT,

   PRIMARY KEY(ID),
   CONSTRAINT FK_PARENT_CATEGORY
      FOREIGN KEY(PARENT_ID) 
	  REFERENCES CATEGORY(ID)
);

CREATE TABLE MANUFACTURER(
   ID            INT GENERATED ALWAYS AS IDENTITY,
   NAME          TEXT NOT NULL,
   DESCRIPTION   TEXT,

   PRIMARY KEY(ID)
);

CREATE TABLE PRODUCT(
   ID            INT GENERATED ALWAYS AS IDENTITY,
   NAME          TEXT    NOT NULL,
   DESCRIPTION   TEXT,
   CATEGORY_ID   INT,
   MANUFACTURER_ID   INT,

   PRIMARY KEY(ID),
   CONSTRAINT FK_CATEGORY
      FOREIGN KEY(CATEGORY_ID) 
	  REFERENCES CATEGORY(ID),
   CONSTRAINT FK_MANUFACTURER
      FOREIGN KEY(MANUFACTURER_ID) 
	  REFERENCES MANUFACTURER(ID)
);

CREATE TABLE PRODUCT_IMAGE(
   ID            INT GENERATED ALWAYS AS IDENTITY,
   URL           TEXT    NOT NULL,
   DESCRIPTION   TEXT,
   PRODUCT_ID    INT,

   PRIMARY KEY(ID),
   CONSTRAINT FK_PRODUCT
      FOREIGN KEY(PRODUCT_ID) 
	  REFERENCES PRODUCT(ID)
);

CREATE TABLE REVIEW(
   ID            INT GENERATED ALWAYS AS IDENTITY,
   USER_NAME     TEXT NOT NULL,
   RATING        INT NOT NULL,
   CONTENT       TEXT,
   PRODUCT_ID    INT NOT NULL,

   PRIMARY KEY(ID),
   CONSTRAINT FK_PRODUCT
      FOREIGN KEY(PRODUCT_ID) 
	  REFERENCES PRODUCT(ID)
);

CREATE TABLE USER_ORDER(
   ID UUID PRIMARY KEY DEFAULT gen_random_uuid()
);

CREATE TABLE ORDER_ITEM(
   ORDER_ID     UUID NOT NULL,
   PRODUCT_ID    INT NOT NULL,

   PRIMARY KEY(ORDER_ID, PRODUCT_ID),
   CONSTRAINT FK_ORDER
      FOREIGN KEY(ORDER_ID) 
	   REFERENCES USER_ORDER(ID),
   CONSTRAINT FK_PRODUCT
      FOREIGN KEY(PRODUCT_ID) 
	   REFERENCES PRODUCT(ID)
);

-- DROP TABLE IF EXISTS ORDER_ITEM;
-- DROP TABLE IF EXISTS USER_ORDER;
-- DROP TABLE IF EXISTS REVIEW;
-- DROP TABLE IF EXISTS PRODUCT_IMAGE;
-- DROP TABLE IF EXISTS PRODUCT;
-- DROP TABLE IF EXISTS CATEGORY;
-- DROP TABLE IF EXISTS MANUFACTURER;